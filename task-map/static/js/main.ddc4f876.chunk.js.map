{"version":3,"sources":["component/Point/index.js","component/Add/index.js","component/List/index.js","redux/actions.js","component/RouteList/index.js","redux/actionTypes.js","component/RouteMap/index.js","component/App/index.js","redux/reducers/points.js","redux/reducers/index.js","redux/reducers/center.js","store.js","serviceWorker.js","index.js"],"names":["Point","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","bind","assertThisInitialized","e","onClose","id","react_default","a","createElement","className","children","onClick","Component","Add","state","input","handleChange","handleAdd","setState","target","value","onAdd","_this2","onSubmit","preventDefault","onChange","type","List","nextRouteId","SortablePoint","SortableElement","SortableList","SortableContainer","RouteList","handleSortEnd","handleRemove","handleAddPoint","oldIndex","_ref","newIndex","swapPoint","removePoint","text","addPoint","coordinates","center","points","map","point","index","key","react","component_Add","distance","helperClass","onSortEnd","connect","ownProps","_ref3","RouteMap","handleChangeCenter","handleMovePoints","getAddress","ymaps","address","event","changeCenter","get","changePoint","originalEvent","geometry","_coordinates","geocode","then","res","geoObjects","properties","getAll","name","_this3","BalloonTemplate","react_yandex_maps_umd_production_min","options","draggable","modules","onGeometryChange","onBalloonOpen","onBalloonClose","balloonContent","mapState","zoom","line","query","apikey","width","height","onBoundsChange","onLoad","strokeColor","strokeWidth","_ref2","App","component_RouteList","component_RouteMap","getIndexById","i","length","action","concat","toConsumableArray","slice","objectSpread","allReducers","arguments","undefined","removeIndex","rootReducer","combineReducers","store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","es","component_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ddc4f876.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './style.css';\r\n\r\nclass Point extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClose(e){\r\n    this.props.onClose(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"Point\">\r\n        <p className=\"Point__Text\">{this.props.children}</p>\r\n        <button onClick={this.handleClose} className=\"Point__Close\"><span /></button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nPoint.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Point;","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass Add extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { input: \"\"};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    this.setState({input: e.target.value})\r\n  }\r\n\r\n  handleAdd(){\r\n    this.props.onAdd(this.state.input)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className = 'Add' onSubmit = {(e) => { e.preventDefault(); this.handleAdd()}}>\r\n        <input className = 'Add__Input' onChange = {this.handleChange} type=\"text\" value = {this.state.input}/>\r\n        <input type = 'submit' className = 'Add__Button' value = 'Add' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAdd.propTypes = {\r\n  onAdd: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Add\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"List\">\r\n        {this.props.children}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;","import { ADD_POINT, REMOVE_POINT, SWAP_POINT, CHANGE_POINT, CHANGE_CENTER } from \"./actionTypes\";\r\n\r\nlet nextRouteId = 0;\r\n\r\nexport const addPoint = ({text, coordinates}) => ({\r\n  type: ADD_POINT,\r\n  id: nextRouteId++ + \"\",\r\n  text: text,\r\n  coordinates: coordinates\r\n})\r\n\r\nexport const removePoint = (id) => ({\r\n  type: REMOVE_POINT,\r\n  id: id\r\n})\r\n\r\nexport const changePoint = ({id, text, coordinates}) => ({\r\n  type: CHANGE_POINT,\r\n  id: id,\r\n  text: text,\r\n  coordinates: coordinates\r\n})\r\n\r\n\r\nexport const swapPoint = ({oldIndex, newIndex}) => ({\r\n  type: SWAP_POINT,\r\n  oldIndex: oldIndex,\r\n  newIndex: newIndex\r\n})\r\n\r\nexport const changeCenter = ( coordinates ) => ({\r\n  type: CHANGE_CENTER,\r\n  coordinates: coordinates\r\n})","import React, { Component , Fragment} from 'react';\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Point from '../Point';\r\nimport Add from '../Add';\r\nimport List from '../List';\r\nimport { connect } from \"react-redux\";\r\nimport { addPoint, removePoint, swapPoint } from '../../redux/actions';\r\n\r\n\r\n\r\nconst SortablePoint = SortableElement(Point);\r\n\r\nconst SortableList = SortableContainer(List);\r\n\r\nclass RouteList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleSortEnd = this.handleSortEnd.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleAddPoint = this.handleAddPoint.bind(this);\r\n  }\r\n\r\n  handleSortEnd({oldIndex, newIndex}){\r\n    this.props.swapPoint({oldIndex, newIndex})\r\n  }\r\n\r\n  handleRemove(id){\r\n    this.props.removePoint(id);\r\n  }\r\n\r\n  handleAddPoint(text){\r\n    if( text === \"\"){\r\n      return\r\n    }\r\n\r\n    this.props.addPoint({ text, coordinates: this.props.center});\r\n  }\r\n\r\n  render() {\r\n\r\n    const points = this.props.points.map((point, index)=>{\r\n      return (\r\n        <SortablePoint id={point.id} index={index} key={point.id} onClose={this.handleRemove}>\r\n          {point.text}\r\n        </SortablePoint>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <Fragment>\r\n        <Add onAdd = {this.handleAddPoint} />\r\n        <SortableList distance={1} helperClass=\"Point_focus\" onSortEnd={this.handleSortEnd}>\r\n          {points}\r\n        </SortableList>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { points, center } = state;\r\n  return { points, center }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addPoint, removePoint, swapPoint }\r\n)(RouteList)","export const ADD_POINT = \"ADD_POINT\";\r\nexport const REMOVE_POINT = \"REMOVE_POINT\";\r\nexport const SWAP_POINT = \"SWAP_POINT\";\r\nexport const CHANGE_POINT = \"CHANGE_POINT\";\r\n\r\nexport const CHANGE_CENTER = \"CHANGE_CENTER\";","import { YMaps, Map, Placemark, GeoObject } from 'react-yandex-maps';\r\nimport \"./style.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeCenter, changePoint } from '../../redux/actions';\r\n\r\nclass RouteMap extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChangeCenter = this.handleChangeCenter.bind(this);\r\n    this.handleMovePoints = this.handleMovePoints.bind(this);\r\n    this.getAddress = this.getAddress.bind(this);\r\n    this.state = { ymaps: null, address: '' };\r\n  }\r\n\r\n  handleChangeCenter(event){\r\n    this.props.changeCenter(event.get(\"newCenter\"))\r\n  }\r\n\r\n  handleMovePoints(event, id){\r\n    this.props.changePoint({ coordinates: event.originalEvent.target.geometry._coordinates, id})\r\n\r\n  }\r\n\r\n  getAddress(coordinates){\r\n    let geocoder = this.state.ymaps.geocode(coordinates);\r\n    geocoder.then((res) => {\r\n      this.setState({address: res.geoObjects.get(0).properties.getAll().name})\r\n    })\r\n  }\r\n\r\n  render(){\r\n\r\n    const points = this.props.points.map((point) => {\r\n\r\n      const BalloonTemplate = '<h5 style = \"margin: 3px; font-weight: 400; font-size: 15px;\">' + point.text + '</h5>' +\r\n        '<p style = \"margin: 3px\">' + ( this.state.address || 'Загрузка...') + '</p>'\r\n\r\n      return <Placemark \r\n        key = {point.id} \r\n        options = {  {draggable: true} }\r\n        modules = {['geoObject.addon.balloon']}\r\n        geometry = { point.coordinates } \r\n        onGeometryChange = { (event) => { this.handleMovePoints(event, point.id) } }\r\n        onBalloonOpen = { () => this.getAddress(point.coordinates) }\r\n        onBalloonClose = { () => this.setState({address: '' }) }\r\n        properties = { { balloonContent: BalloonTemplate } }\r\n        />\r\n    })\r\n\r\n    const mapState = {\r\n      center: this.props.center,\r\n      zoom: 9\r\n    }\r\n\r\n    const line = this.props.points.map((point) => {\r\n      return point.coordinates\r\n    })\r\n\r\n    return (\r\n      <YMaps query = { { apikey: 'c2f7ee60-233c-488b-ad4d-d1576e874f91' } }>\r\n        <Map \r\n          width = '100%' \r\n          height = '100%' \r\n          state = { mapState }\r\n          modules = {['geocode']}\r\n          onBoundsChange={this.handleChangeCenter} \r\n          onLoad = { ymaps => this.setState({ymaps}) }\r\n        >\r\n          {points}\r\n          <GeoObject             \r\n            geometry={{\r\n              type: 'LineString',\r\n              coordinates: line\r\n            }}\r\n            options={{\r\n              strokeColor: '#bfedff',\r\n              strokeWidth: 3,\r\n            }}\r\n          />\r\n        </Map>\r\n      </YMaps>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { points, center } = state;\r\n  return { points, center }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeCenter, changePoint }\r\n)(RouteMap)","import React, { Component } from 'react';\nimport './style.css';\nimport RouteList from '../RouteList';\nimport RouteMap from '../RouteMap';\n\n\nclass App extends Component {\n  render() {\n    return (    \n      <div className=\"App\">\n      \t<div className = \"left\">\n      \t\t<RouteList />\n      \t</div>\n      \t<div className = \"right\">\n      \t\t<RouteMap />\n      \t</div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n//c2f7ee60-233c-488b-ad4d-d1576e874f91\n","import { ADD_POINT, REMOVE_POINT, SWAP_POINT, CHANGE_POINT } from \"../actionTypes\";\r\n\r\n\r\nconst points = (state = [], action) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_POINT:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          coordinates: action.coordinates\r\n        }                \r\n      ]\r\n\r\n    case REMOVE_POINT:\r\n      let removeIndex = getIndexById(action.id, state);\r\n      return [\r\n        ...state.slice(0, removeIndex),\r\n        ...state.slice(removeIndex + 1)\r\n      ];\r\n\r\n    case SWAP_POINT:\r\n      return swapPoint( state, action )\r\n\r\n    case CHANGE_POINT:\r\n      return changePoint( state, action )\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const getIndexById = (id, points) => {\r\n\r\n  let index;\r\n\r\n  for (var i = 0; i < points.length; i++){\r\n    if(points[i].id === id){\r\n      index = i;\r\n    }\r\n  }\r\n\r\n  return index\r\n}\r\n\r\nexport const swapPoint = (state, action) => {\r\n\r\n  let points = [\r\n    ...state.slice(0, action.oldIndex),\r\n    state[action.newIndex],\r\n    ...state.slice(action.oldIndex + 1)\r\n  ];\r\n\r\n  points[action.newIndex] = state[action.oldIndex];\r\n\r\n  return points;\r\n\r\n}\r\n\r\nexport const changePoint = (state, action) => {\r\n\r\n  const index = getIndexById(action.id, state);\r\n\r\n  let point = { ...state[index] };\r\n\r\n  point.coordinates = action.coordinates || point.coordinates;\r\n  point.text = action.text || point.text;\r\n\r\n  return [\r\n    ...state.slice(0, index),\r\n    point,\r\n    ...state.slice(index + 1)\r\n  ]\r\n}\r\n\r\nexport default points;","import { combineReducers } from 'redux';\r\nimport points from './points';\r\nimport center from './center';\r\n\r\nconst allReducers = {\r\n    points,\r\n    center\r\n}\r\n\r\nconst rootReducer = combineReducers(allReducers);\r\n\r\nexport default rootReducer;","import { CHANGE_CENTER } from \"../actionTypes\";\r\n\r\nconst center = (state = [55.75, 37.57], action) => {\r\n  switch (action.type) {\r\n\r\n    case CHANGE_CENTER:\r\n      return [\r\n      \t...action.coordinates\r\n      ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default center","import { createStore } from \"redux\"\r\nimport rootReducer from './redux/reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport { Provider } from 'react-redux';\nimport store from './store.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}